;; Karabiner recognizes my keyboard as a qwerty keyboard, hence all rules are "hardcoded" using a qwerty layout
;; !  | means mandatory
;; #  | means optional
;; C  | left_command
;; T  | left_control
;; O  | left_option
;; S  | left_shift
;; F  | fn
;; Q  | right_command
;; W  | right_control
;; E  | right_option
;; R  | right_shift
;; P  | caps_lock
;; !! | mandatory command + control + optional + shift (hyper)
;; ## | optional any

;; a : a
;; b : b
;; c : c
;; d : d
;; e : e
;; f : f
;; g : g
;; h : h
;; i : i
;; j : j
;; k : k
;; l : l
;; m : semicolon
;; n : n
;; o : o
;; p : p
;; q : q
;; r : r
;; s : s
;; t : t
;; u : u
;; v : v
;; w : w
;; x : x
;; y : y
;; z : z
;; @ : non_us_backslash
;; < : grave_accent_and_tilde
;; , : m
;; ; : comma
;; : : period
;; = : equal_sign or slash
;; Ã¹ : quote
;; ` : backslash ou non_us_pound
;; $ : close_bracket
;; ^ : open_bracket


{ :simlayers {
    :shift_left_mode {:key :a} ;; hold q for shift left
    :shift_right_mode {:key :semicolon} ;; hold m for shift right
    :control_left_mode {:key :s} ;; hold s for control left
    :control_right_mode {:key :l} ;; hold l for control right
    :option_left_mode {:key :d} ;; hold d for option left
    :option_right_mode {:key :k} ;; hold k for option right
    :cmd_left_mode {:key :f} ;; hold f for cmd left
    :cmd_right_mode {:key :j} ;; hold j for cmd right
    :numpad_mode {:key :v} ;; hold v for numpad mode
  }

  :main [
  {:des "shift_left_mode"
    :rules [[:condi :shift_left_mode]
      ;; [:a :!Sa]
      [:b :!Sb]
      [:c :!Sc]
      [:d :!Sd]
      [:e :!Se]
      [:f :!Sf]
      [:g :!Sg]
      [:h :!Sh]
      [:i :!Si]
      [:j :!Sj]
      [:k :!Sk]
      [:l :!Sl]
      [:m :!Sm]
      [:n :!Sn]
      [:o :!So]
      [:p :!Sp]
      [:q :!Sq]
      [:r :!Sr]
      [:s :!Ss]
      [:t :!St]
      [:u :!Su]
      [:v :!Sv]
      [:w :!Sw]
      [:x :!Sx]
      [:y :!Sy]
      [:z :!Sz]
      [:period :!Speriod]
      [:comma :!Scomma]
      [:backslash :!Sbackslash]
      [:slash :!Sslash]
      [:quote :!Squote]
      [:non_us_backslash :!Snon_us_backslash]
      [:non_us_pound :!Snon_us_pound]
      [:open_bracket :!Sopen_bracket]
      [:close_bracket :!Sclose_bracket]
      [:quote :!Squote]
      [:semicolon :!Ssemicolon]
      [:tab :!Stab]
    ]
  }
  {:des "shift_right_mode"
    :rules [[:condi :shift_right_mode]
      [:a :!Ra]
      [:b :!Rb]
      [:c :!Rc]
      [:d :!Rd]
      [:e :!Re]
      [:f :!Rf]
      [:g :!Rg]
      [:h :!Rh]
      [:i :!Ri]
      [:j :!Rj]
      [:k :!Rk]
      [:l :!Rl]
      [:m :!Rm]
      [:n :!Rn]
      [:o :!Ro]
      [:p :!Rp]
      [:q :!Rq]
      [:r :!Rr]
      [:s :!Rs]
      [:t :!Rt]
      [:u :!Ru]
      [:v :!Rv]
      [:w :!Rw]
      [:x :!Rx]
      [:y :!Ry]
      [:z :!Rz]
      [:period :!Rperiod]
      [:comma :!Rcomma]
      [:backslash :!Rbackslash]
      [:slash :!Rslash]
      [:quote :!Rquote]
      [:non_us_backslash :!Rnon_us_backslash]
      [:non_us_pound :!Rnon_us_pound]
      [:open_bracket :!Ropen_bracket]
      [:close_bracket :!Rclose_bracket]
      [:quote :!Rquote]
      ;;[:semicolon :!Rsemicolon] ;; Remove the real m from the liste
      [:tab :!Rtab]
    ]
  }
  {:des "control_left_mode"
    :rules [[:condi :control_left_mode]
      [:a :!Ta]
      [:b :!Tb]
      [:c :!Tc]
      [:d :!Td]
      [:e :!Te]
      [:f :!Tf]
      [:g :!Tg]
      [:h :!Th]
      [:i :!Ti]
      [:j :!Tj]
      [:k :!Tk]
      [:l :!Tl]
      [:m :!Tm]
      [:n :!Tn]
      [:o :!To]
      [:p :!Tp]
      [:q :!Tq]
      [:r :!Tr]
      ;;[:s :!Ss]
      [:t :!Tt]
      [:u :!Tu]
      [:v :!Tv]
      [:w :!Tw]
      [:x :!Tx]
      [:y :!Ty]
      [:z :!Tz]
      [:period :!Tperiod]
      [:comma :!Tcomma]
      [:backslash :!Tbackslash]
      [:slash :!Tslash]
      [:quote :!Tquote]
      [:non_us_backslash :!Tnon_us_backslash]
      [:non_us_pound :!Tnon_us_pound]
      [:open_bracket :!Topen_bracket]
      [:close_bracket :!Tclose_bracket]
      [:quote :!Tquote]
      [:semicolon :!Tsemicolon]
      [:tab :!Ttab]
    ]
  }
  {:des "control_right_mode"
    :rules [[:condi :control_right_mode]
      [:a :!Wa]
      [:b :!Wb]
      [:c :!Wc]
      [:d :!Wd]
      [:e :!We]
      [:f :!Wf]
      [:g :!Wg]
      [:h :!Wh]
      [:i :!Wi]
      [:j :!Wj]
      [:k :!Wk]
      ;;[:l :!Wl]
      [:m :!Wm]
      [:n :!Wn]
      [:o :!Wo]
      [:p :!Wp]
      [:q :!Wq]
      [:r :!Wr]
      [:s :!Ws]
      [:t :!Wt]
      [:u :!Wu]
      [:v :!Wv]
      [:w :!Ww]
      [:x :!Wx]
      [:y :!Wy]
      [:z :!Wz]
      [:period :!Wperiod]
      [:comma :!Wcomma]
      [:backslash :!Wbackslash]
      [:slash :!Wslash]
      [:quote :!Wquote]
      [:non_us_backslash :!Wnon_us_backslash]
      [:non_us_pound :!Wnon_us_pound]
      [:open_bracket :!Wopen_bracket]
      [:close_bracket :!Wclose_bracket]
      [:quote :!Wquote]
      [:semicolon :!Wsemicolon]
      [:tab :!Wtab]
    ]
  }
  {:des "option_left_mode"
    :rules [[:condi :option_left_mode]
      [:a :!Oa]
      [:b :!Ob]
      [:c :!Oc]
      ;;[:d :!Od]
      [:e :!Oe]
      [:f :!Of]
      [:g :!Og]
      [:h :!Oh]
      [:i :!Oi]
      [:j :!Oj]
      [:k :!Ok]
      [:l :!Ol]
      [:m :!Om]
      [:n :!On]
      [:o :!Oo]
      [:p :!Op]
      [:q :!Oq]
      [:r :!Or]
      [:s :!Os]
      [:t :!Ot]
      [:u :!Ou]
      [:v :!Ov]
      [:w :!Ow]
      [:x :!Ox]
      [:y :!Oy]
      [:z :!Oz]
      [:period :!Operiod]
      [:comma :!Ocomma]
      [:backslash :!Obackslash]
      [:slash :!Oslash]
      [:quote :!Oquote]
      [:non_us_backslash :!Onon_us_backslash]
      [:non_us_pound :!Onon_us_pound]
      [:open_bracket :!Oopen_bracket]
      [:close_bracket :!Oclose_bracket]
      [:quote :!Oquote]
      [:semicolon :!Osemicolon]
      [:tab :!Otab]
    ]
  }
  {:des "option_right_mode"
    :rules [[:condi :option_right_mode]
      [:a :!Ea]
      [:b :!Eb]
      [:c :!Ec]
      [:d :!Ed]
      [:e :!Ee]
      [:f :!Ef]
      [:g :!Eg]
      [:h :!Eh]
      [:i :!Ei]
      [:j :!Ej]
      ;;[:k :!Ek]
      [:l :!El]
      [:m :!Em]
      [:n :!En]
      [:o :!Eo]
      [:p :!Ep]
      [:q :!Eq]
      [:r :!Er]
      [:s :!Es]
      [:t :!Et]
      [:u :!Eu]
      [:v :!Ev]
      [:w :!Ew]
      [:x :!Ex]
      [:y :!Ey]
      [:z :!Ez]
      [:period :!Eperiod]
      [:comma :!Ecomma]
      [:backslash :!Ebackslash]
      [:slash :!Eslash]
      [:quote :!Equote]
      [:non_us_backslash :!Enon_us_backslash]
      [:non_us_pound :!Enon_us_pound]
      [:open_bracket :!Eopen_bracket]
      [:close_bracket :!Eclose_bracket]
      [:quote :!Equote]
      [:semicolon :!Esemicolon]
      [:tab :!Etab]
    ]
  }
  {:des "cmd_left_mode"
    :rules [[:condi :cmd_left_mode]
      [:a :!Ca]
      [:b :!Cb]
      [:c :!Cc]
      [:d :!Cd]
      [:e :!Ce]
      ;;[:f :!Cf]
      [:g :!Cg]
      [:h :!Ch]
      [:i :!Ci]
      [:j :!Cj]
      [:k :!Ck]
      [:l :!Cl]
      [:m :!Cm]
      [:n :!Cn]
      [:o :!Co]
      [:p :!Cp]
      [:q :!Cq]
      [:r :!Cr]
      [:s :!Cs]
      [:t :!Ct]
      [:u :!Cu]
      [:v :!Cv]
      [:w :!Cw]
      [:x :!Cx]
      [:y :!Cy]
      [:z :!Cz]
      [:period :!Cperiod]
      [:comma :!Ccomma]
      [:backslash :!Cbackslash]
      [:slash :!Cslash]
      [:quote :!Cquote]
      [:non_us_backslash :!Cnon_us_backslash]
      [:non_us_pound :!Cnon_us_pound]
      [:open_bracket :!Copen_bracket]
      [:close_bracket :!Cclose_bracket]
      [:quote :!Cquote]
      [:semicolon :!Csemicolon]
      [:tab :!Ctab]
    ]
  }
  {:des "cmd_right_mode"
    :rules [[:condi :cmd_right_mode]
      [:a :!Qa]
      [:b :!Qb]
      [:c :!Qc]
      [:d :!Qd]
      [:e :!Qe]
      [:f :!Qf]
      [:g :!Qg]
      [:h :!Qh]
      [:i :!Qi]
      ;;[:j :!Qj]
      [:k :!Qk]
      [:l :!Ql]
      [:m :!Qm]
      [:n :!Qn]
      [:o :!Qo]
      [:p :!Qp]
      [:q :!Qq]
      [:r :!Qr]
      [:s :!Qs]
      [:t :!Qt]
      [:u :!Qu]
      [:v :!Qv]
      [:w :!Qw]
      [:x :!Qx]
      [:y :!Qy]
      [:z :!Qz]
      [:period :!Qperiod]
      [:comma :!Qcomma]
      [:backslash :!Qbackslash]
      [:slash :!Qslash]
      [:quote :!Qquote]
      [:non_us_backslash :!Qnon_us_backslash]
      [:non_us_pound :!Qnon_us_pound]
      [:open_bracket :!Qopen_bracket]
      [:close_bracket :!Qclose_bracket]
      [:quote :!Qquote]
      [:semicolon :!Qsemicolon]
      [:tab :!Qtab]
    ]
  }
  {:des "numbers_layer"
    :rules [[:condi :numpad_mode]
      [:j             :!S0]       ;; = for 0
      [:k             :!S1]       ;; , for 1
      [:l             :!S2]       ;; ; for 2
      [:semicolon     :!S3]       ;; : for 3
      [:quote         :!S4]       ;; j for 4
      [:u             :!S5]       ;; k for 5
      [:i             :!S6]       ;; l for 6
      [:o             :!S7]       ;; u for 7
      [:p             :!S8]       ;; i for 8
      [:open_bracket  :!S9]       ;; p for 9
      [:h             :!Scomma]
      [:m             :!Sslash]
      [:comma         :keypad_hyphen]
      [:period         :!Sclose_bracket]
      [:slash         :!Speriod]
      [:n         :slash]
    ]
  }
  {:des "navigation_layer"
    :rules [[:condi :navigation_mode]
      [:j :left_arrow]                ;; j for left
      [:k :down_arrow]                ;; k for down
      [:l :up_arrow]                  ;; l for up 
      [:semicolon :right_arrow]       ;; m for right
    ]
  }
  {:des "left_shift is delete a word if alone"
    :rules [[:left_shift :left_shift nil {:alone :!Odelete_or_backspace}]]
  }]
}
